/** ******************************************************************************
@brief
@file
@author
@version 1.0
@date 12-August-2019
@brief Functions and structures for program Pingpong
Pingpong statemachine for Pingpong-program pingpong.c
Bengt Molin
****************************************************************************** */
/* Includes ------------------------------------------------------------------*/
#include "pingpong.h"
/* Define states for state machine*/
typedef enum
{ Start,
MoveRight,
MoveLeft
} states;

static states State, NextState;

void Pingpong(void)
{
	bool ButtonPressed; // To remember that button is pressed

	uint32_t Varv, Speed; // Ball speed
	uint8_t Led; // LED nr

	State= Start; // Initiate State to Start
	NextState= Start;

	Speed= 500000; // Number of loops

	/* Infinite loop */
	while (1)
	{
		State = NextState;

		switch (State) // State machine
		{
		case Start:
			Led_on(0); // Turn off all LEDs
			if ( L_hit() == true ) {
				Led = 1;
				NextState= MoveRight;
				while ( L_hit() == true );
			}
			else if ( R_hit() == true ) {
			Led = 8;
			NextState= MoveLeft;
			while ( R_hit() == true );
		else
		NextState = Start; // Stay break;
		}
	}
}
